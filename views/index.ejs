<!DOCTYPE html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="/css/tailwind.css" rel="stylesheet" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
    />
    <title>Weather Bento Box</title>
    <style>
      .weather-box {
        transition: transform 0.2s ease-in-out;
      }
      .weather-box:hover {
        transform: scale(1.05);
      }
      .weather-box p {
        font-size: 1.5rem;
        margin-bottom: 1rem;
      }
    </style>
  </head>
  <body
    class="bg-gradient-to-r from-blue-400 to-purple-600 min-h-screen flex items-center justify-center light dark:bg-gradient-to-r dark:from-gray-800 dark:via-gray-900 dark:to-black"
  >
    <div class="container mx-auto p-6">
      <div class="flex justify-end items-center mb-6">
        <div class="mr-4">
          <select
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
            id="language"
          >
            <option value="en">English</option>
            <option value="it">Italian</option>
          </select>
        </div>
        <button
          id="theme-toggle"
          class="p-2 bg-purple-600 text-white font-bold rounded-lg shadow-lg hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-opacity-50"
        >
          <i id="theme-icon" class="fas fa-moon"></i>
        </button>
      </div>
      <h1 class="text-4xl font-extrabold text-center text-white mb-6">
        Weather
      </h1>
      <form action="/weather" method="get" class="text-center mb-6">
        <input
          type="text"
          name="city"
          placeholder="Enter city"
          class="p-3 w-full md:w-1/3 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent"
        />
        <button
          type="submit"
          class="p-3 mt-3 md:mt-0 md:ml-3 w-full md:w-auto bg-purple-600 text-white font-bold rounded-lg shadow-lg hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-opacity-50"
        >
          Get Weather
        </button>
      </form>
      <% if (weather) { %>
      <div
        class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6"
      >
        <div
          class="weather-box bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md"
        >
          <h2 class="text-2xl font-bold mb-2 dark:text-gray-300">
            <%= weather.latitude %>, <%= weather.longitude %>
          </h2>
          <p class="text-gray-700 dark:text-gray-300">
            <%= weather.currently.temperature %> °C
          </p>
          <p class="text-gray-700 dark:text-gray-300">
            <span id="weather-icon"></span>
          </p>
        </div>
        <div
          class="weather-box bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md"
        >
          <h2 class="text-2xl font-bold mb-2 dark:text-gray-300">Humidity</h2>
          <p class="text-gray-700 dark:text-gray-300">
            <%= weather.currently.humidity * 100 %> %
          </p>
        </div>
        <div
          class="weather-box bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md"
        >
          <h2 class="text-2xl font-bold mb-2 dark:text-gray-300">Wind Speed</h2>
          <p class="text-gray-700 dark:text-gray-300">
            <%= weather.currently.windSpeed %> m/s
          </p>
        </div>
        <div
          class="weather-box bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md"
        >
          <h2 class="text-2xl font-bold mb-2 dark:text-gray-300">Pressure</h2>
          <p class="text-gray-700 dark:text-gray-300">
            <%= weather.currently.pressure %> hPa
          </p>
        </div>
        <div
          class="weather-box bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md"
        >
          <h2 class="text-2xl font-bold mb-2 dark:text-gray-300">Cloudiness</h2>
          <p class="text-gray-700 dark:text-gray-300">
            <%= weather.currently.cloudCover * 100 %> %
          </p>
        </div>
        <div
          class="weather-box bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md"
        >
          <h2 class="text-2xl font-bold mb-2 dark:text-gray-300">UV Index</h2>
          <p class="text-gray-700 dark:text-gray-300">
            <%= weather.currently.uvIndex %>
          </p>
        </div>
        <div
          class="weather-box bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md"
        >
          <h2 class="text-2xl font-bold mb-2 dark:text-gray-300">Visibility</h2>
          <p class="text-gray-700 dark:text-gray-300">
            <%= weather.currently.visibility %> km
          </p>
        </div>
        <div
          class="weather-box bg-white dark:bg-gray-800 p-6 rounded-lg shadow-md"
        >
          <h2 class="text-2xl font-bold mb-2 dark:text-gray-300">Ozone</h2>
          <p class="text-gray-700 dark:text-gray-300">
            <%= weather.currently.ozone %> DU
          </p>
        </div>
      </div>
      <% } %> <% if (error) { %>
      <p class="text-red-500 text-center mt-6"><%= error %></p>
      <% } %>
    </div>
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const weatherIconElement = document.getElementById("weather-icon");
        if (weatherIconElement) {
          const condition = "<%= weather ? weather.currently.icon : '' %>";
          if (condition) {
            const iconClass = weatherIcon(condition);
            weatherIconElement.className = iconClass;
          }
        }
      });

      var root = document.getElementsByTagName("html")[0];
      const themeToggle = document.getElementById("theme-toggle");
      const themeIcon = document.getElementById("theme-icon");
      themeToggle.addEventListener("click", () => {
        root.classList.toggle("dark");
        if (root.classList.contains("dark")) {
          themeIcon.classList.remove("fa-moon");
          themeIcon.classList.add("fa-sun");
        } else {
          themeIcon.classList.remove("fa-sun");
          themeIcon.classList.add("fa-moon");
        }
      });

      function loadLanguagePreference() {
        const savedLanguage = localStorage.getItem("selectedLanguage");
        if (savedLanguage) {
          document.getElementById("language").value = savedLanguage;
          applyTranslations(savedLanguage);
        }
      }

      function saveLanguagePreference() {
        const selectedLanguage = document.getElementById("language").value;
        localStorage.setItem("selectedLanguage", selectedLanguage);
        applyTranslations(selectedLanguage);
      }

      function applyTranslations(selectedLanguage) {
        const translations = {
          en: {
            title: "Weather",
            cityPlaceholder: "Enter city",
            submitButton: "Get Weather",
            languageLabel: "Language:",
            optionEnglish: "English",
            optionItalian: "Italian",
            latitude: "Latitude, Longitude",
            temperature: "Temperature",
            condition: "Condition",
            humidity: "Humidity",
            windSpeed: "Wind Speed",
            pressure: "Pressure",
            cloudiness: "Cloudiness",
            uvIndex: "UV Index",
            visibility: "Visibility",
            ozone: "Ozone",
          },
          it: {
            title: "Meteo",
            cityPlaceholder: "Inserisci città",
            submitButton: "Ottieni Previsioni",
            languageLabel: "Lingua:",
            optionEnglish: "Inglese",
            optionItalian: "Italiano",
            latitude: "Latitudine, Longitudine",
            temperature: "Temperatura",
            condition: "Condizione",
            humidity: "Umidità",
            windSpeed: "Velocità del Vento",
            pressure: "Pressione",
            cloudiness: "Copertura nuvolosa",
            uvIndex: "Indice UV",
            visibility: "Visibilità",
            ozone: "Ozono",
          },
        };

        document.title = translations[selectedLanguage].title;
        document.querySelector("h1").textContent =
          translations[selectedLanguage].title;
        document.querySelector('input[name="city"]').placeholder =
          translations[selectedLanguage].cityPlaceholder;
        document.querySelector('button[type="submit"]').textContent =
          translations[selectedLanguage].submitButton;
        document.querySelector('option[value="en"]').textContent =
          translations[selectedLanguage].optionEnglish;
        document.querySelector('option[value="it"]').textContent =
          translations[selectedLanguage].optionItalian;

        const weatherBoxes = document.querySelectorAll(".weather-box");
        const weatherBoxTitles = [
          "latitude",
          "humidity",
          "windSpeed",
          "pressure",
          "cloudiness",
          "uvIndex",
          "visibility",
          "ozone",
        ];

        weatherBoxes.forEach((box, index) => {
          const titleElement = box.querySelector("h2");
          const titleText = weatherBoxTitles[index];
          if (translations[selectedLanguage][titleText]) {
            titleElement.textContent =
              translations[selectedLanguage][titleText];
          }
        });
      }

      document.addEventListener("DOMContentLoaded", loadLanguagePreference);

      document
        .getElementById("language")
        .addEventListener("change", saveLanguagePreference);

      // Funzione per ottenere l'icona meteo basata sulla condizione
      function weatherIcon(condition) {
        const iconMap = {
          "clear-day": "fas mt-6 fa-sun fa-2xl mt-6",
          "clear-night": "fas mt-6 fa-2xl fa-moon",
          rain: "fas mt-6 fa-2xl fa-cloud-rain",
          snow: "fas mt-6 fa-2xl fa-snowflake",
          sleet: "fas mt-6 fa-2xl fa-cloud-meatball",
          wind: "fas mt-6 fa-2xl fa-wind",
          fog: "fas mt-6 fa-2xl fa-smog",
          cloudy: "fas mt-6 fa-2xl fa-cloud",
          "partly-cloudy-day": "fas mt-6 fa-2xl fa-cloud-sun",
          "partly-cloudy-night": "fas mt-6 fa-2xl fa-cloud-moon",
          hail: "fas mt-6 fa-2xl fa-cloud-showers-heavy",
          thunderstorm: "fas mt-6 fa-2xl fa-bolt",
          tornado: "fas mt-6 fa-2xl fa-poo-storm",
        };

        return iconMap[condition] || "fas fa-2xl fa-question";
      }

      // Imposta l'icona meteo al caricamento della pagina
    </script>
  </body>
</html>
